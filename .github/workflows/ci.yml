name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10.x]
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.0.0
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        poetry config virtualenvs.in-project true
        poetry install --no-interaction

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: |
        pnpm install

    - name: Check backend code style
      working-directory: ./backend
      run: |
        poetry run black . --check
        poetry run isort . --check

    - name: Check backend code quality
      working-directory: ./backend
      run: |
        poetry run flake8 .
        poetry run ruff check .

    - name: Check backend types
      working-directory: ./backend
      run: |
        poetry run mypy .

    - name: Check frontend code style
      working-directory: ./frontend
      run: |
        pnpm run format:check

    - name: Check frontend code quality
      working-directory: ./frontend
      run: |
        pnpm run lint
        pnpm -r type-check

    - name: Build frontend packages
      working-directory: ./frontend
      run: |
        pnpm -r build

    - name: Run backend unit tests
      working-directory: ./backend
      env:
        TEST_DATABASE_URL: sqlite+aiosqlite:///./test.db
        PYTHONPATH: ${{ github.workspace }}/backend
      run: |
        poetry run pytest tests/ -v

    - name: Run backend API tests
      working-directory: ./backend
      env:
        TEST_DATABASE_URL: sqlite+aiosqlite:///./test.db
        PYTHONPATH: ${{ github.workspace }}/backend
      run: |
        poetry run pytest tests/api/ -v

    - name: Run frontend tests
      working-directory: ./frontend
      run: |
        pnpm -r test

    - name: Upload backend coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./backend/coverage.xml
        flags: backend
        name: backend-coverage

    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./frontend/coverage/coverage-final.json
        flags: frontend
        name: frontend-coverage