[tool.poetry]
name = "codewave-backend"
version = "0.1.0"
description = "CodeWave backend services"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [
    { include = "apps" },
    { include = "packages" }
]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = ">=0.110.0"
uvicorn = "^0.27.1"
sqlalchemy = "^2.0.27"
alembic = "^1.13.1"
pydantic = "^2.6.1"
pydantic-settings = "^2.1.0"
python-multipart = ">=0.0.10"
starlette = ">=0.37.2"
aiosqlite = "^0.19.0"
email-validator = "^2.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.5"
black = "^24.1.1"
isort = "^5.13.2"
mypy = "^1.8.0"
ruff = "^0.2.1"
flake8 = "^7.0.0"
httpx = "^0.28.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
# Directories to exclude
/(
    \.git
    | \.venv
    | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = [".git", ".venv", "__pycache__", "build", "dist", "migrations"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
exclude = [
    'migrations/',
    'build/',
    'dist/',
    '.venv/',
    '__pycache__/',
]
# 允许重复的模块名
allow_redefinition = true
# 将测试目录标记为命名空间包
namespace_packages = true
# 显式指定包基础
explicit_package_bases = true

[tool.ruff]
line-length = 100
target-version = "py310"
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "migrations",
]

[tool.ruff.lint]
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF"]
ignore = []

[tool.ruff.lint.per-file-ignores]
"migrations/*" = ["UP", "E", "F", "B", "I", "N", "PL", "RUF"] 